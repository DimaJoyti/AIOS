version: '3.8'

services:
  # Test Database - PostgreSQL
  test-postgres:
    image: postgres:15-alpine
    container_name: aios-test-postgres
    environment:
      POSTGRES_DB: aios_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
      - ./testdata/sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d aios_test"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Test Cache - Redis
  test-redis:
    image: redis:7-alpine
    container_name: aios-test-redis
    ports:
      - "6380:6379"
    volumes:
      - test_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - test-network

  # Test Message Queue - RabbitMQ
  test-rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: aios-test-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: test_user
      RABBITMQ_DEFAULT_PASS: test_pass
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - test_rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Test Elasticsearch
  test-elasticsearch:
    image: elasticsearch:8.11.0
    container_name: aios-test-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9201:9200"
      - "9301:9300"
    volumes:
      - test_elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - test-network

  # Test MinIO (S3-compatible storage)
  test-minio:
    image: minio/minio:latest
    container_name: aios-test-minio
    environment:
      MINIO_ROOT_USER: test_access_key
      MINIO_ROOT_PASSWORD: test_secret_key
    ports:
      - "9001:9000"
      - "9091:9090"
    volumes:
      - test_minio_data:/data
    command: server /data --console-address ":9090"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Test SMTP Server (MailHog)
  test-mailhog:
    image: mailhog/mailhog:latest
    container_name: aios-test-mailhog
    ports:
      - "1026:1025"  # SMTP
      - "8026:8025"  # Web UI
    networks:
      - test-network

  # Test Jaeger (Tracing)
  test-jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: aios-test-jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16687:16686"  # Web UI
      - "14269:14268"  # HTTP
      - "4318:4318"    # OTLP HTTP
      - "4319:4317"    # OTLP gRPC
    networks:
      - test-network

  # Test Prometheus
  test-prometheus:
    image: prom/prometheus:latest
    container_name: aios-test-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./testdata/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - test_prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - test-network

  # Test Grafana
  test-grafana:
    image: grafana/grafana:latest
    container_name: aios-test-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: test_admin
    ports:
      - "3001:3000"
    volumes:
      - test_grafana_data:/var/lib/grafana
      - ./testdata/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - test-network

  # Test MongoDB
  test-mongodb:
    image: mongo:7
    container_name: aios-test-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: test_user
      MONGO_INITDB_ROOT_PASSWORD: test_pass
      MONGO_INITDB_DATABASE: aios_test
    ports:
      - "27018:27017"
    volumes:
      - test_mongodb_data:/data/db
      - ./testdata/mongodb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Test NATS
  test-nats:
    image: nats:alpine
    container_name: aios-test-nats
    ports:
      - "4223:4222"
      - "8223:8222"
    command: ["-js", "-m", "8222"]
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Test Consul
  test-consul:
    image: consul:latest
    container_name: aios-test-consul
    ports:
      - "8501:8500"
    command: agent -server -bootstrap -ui -client=0.0.0.0
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Test Vault
  test-vault:
    image: vault:latest
    container_name: aios-test-vault
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: test_root_token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    ports:
      - "8201:8200"
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Test Nginx (Load Balancer/Proxy)
  test-nginx:
    image: nginx:alpine
    container_name: aios-test-nginx
    ports:
      - "8081:80"
    volumes:
      - ./testdata/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - test-app
    networks:
      - test-network

  # Test Application Instance
  test-app:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: aios-test-app
    environment:
      AIOS_ENV: test
      AIOS_LOG_LEVEL: error
      AIOS_TEST_MODE: "true"
      DATABASE_URL: postgres://test_user:test_pass@test-postgres:5432/aios_test
      REDIS_URL: redis://test-redis:6379
      RABBITMQ_URL: amqp://test_user:test_pass@test-rabbitmq:5672/
      ELASTICSEARCH_URL: http://test-elasticsearch:9200
      MINIO_ENDPOINT: test-minio:9000
      MINIO_ACCESS_KEY: test_access_key
      MINIO_SECRET_KEY: test_secret_key
      JAEGER_ENDPOINT: http://test-jaeger:14268/api/traces
      PROMETHEUS_URL: http://test-prometheus:9090
    ports:
      - "8080:8080"
    depends_on:
      test-postgres:
        condition: service_healthy
      test-redis:
        condition: service_healthy
      test-rabbitmq:
        condition: service_healthy
    volumes:
      - ./testdata:/app/testdata
      - ./configs:/app/configs
    networks:
      - test-network

volumes:
  test_postgres_data:
    driver: local
  test_redis_data:
    driver: local
  test_rabbitmq_data:
    driver: local
  test_elasticsearch_data:
    driver: local
  test_minio_data:
    driver: local
  test_prometheus_data:
    driver: local
  test_grafana_data:
    driver: local
  test_mongodb_data:
    driver: local

networks:
  test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
